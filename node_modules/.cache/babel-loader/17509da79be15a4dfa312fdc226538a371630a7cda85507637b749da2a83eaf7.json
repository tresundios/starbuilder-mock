{"ast":null,"code":"var _jsxFileName = \"/Users/frees/repotresundios/starbuilder-mock/src/pages/SongUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  songName: \"\",\n  songwriterName: \"\",\n  yearWritten: \"\",\n  performerName: \"\",\n  video: null\n};\nconst SongUpload = () => {\n  _s();\n  const [form, setForm] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [videoError, setVideoError] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === \"video\") {\n      const file = files[0];\n      if (file) {\n        // Placeholder: In a real app, check video duration after upload\n        if (file.size > 200 * 1024 * 1024) {\n          setVideoError(\"Video file too large (max 200MB)\");\n        } else {\n          setVideoError(\"\");\n        }\n        setForm(prev => ({\n          ...prev,\n          video: file\n        }));\n      }\n    } else {\n      setForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const validate = () => {\n    const errs = {};\n    if (!form.songName) errs.songName = \"Song name is required\";\n    if (!form.songwriterName) errs.songwriterName = \"Songwriter name is required\";\n    if (!form.yearWritten) errs.yearWritten = \"Year written is required\";\n    // Performer name is optional unless not songwriter\n    // Video is optional for now\n    return errs;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errs = validate();\n    setErrors(errs);\n    if (Object.keys(errs).length === 0 && !videoError) {\n      // Placeholder for upload logic (API call, payment, etc.)\n      alert(\"Song uploaded! (Demo only)\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-[60vh] px-4 py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white text-3xl font-bold mb-6\",\n      children: \"Upload a Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-[#222b36] rounded-lg p-8 w-full max-w-xl space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white\",\n          children: \"Song Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"songName\",\n          value: form.songName,\n          onChange: handleChange,\n          className: \"form-input w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), errors.songName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-400 text-xs\",\n          children: errors.songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white\",\n          children: \"Songwriter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"songwriterName\",\n          value: form.songwriterName,\n          onChange: handleChange,\n          className: \"form-input w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), errors.songwriterName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-400 text-xs\",\n          children: errors.songwriterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white\",\n          children: \"Year Written\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"yearWritten\",\n          value: form.yearWritten,\n          onChange: handleChange,\n          className: \"form-input w-full\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), errors.yearWritten && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-400 text-xs\",\n          children: errors.yearWritten\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white\",\n          children: \"Performer Name (if not songwriter)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"performerName\",\n          value: form.performerName,\n          onChange: handleChange,\n          className: \"form-input w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white\",\n          children: \"Upload Video (max 6 min, ideally 2.5-4 min)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"video\",\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: handleChange,\n          className: \"form-input w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), videoError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-400 text-xs\",\n          children: videoError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400\",\n          children: \"(Video duration check coming soon)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-6 w-full py-2 bg-[#0b80ee] text-white font-bold rounded-full hover:bg-[#0966b0] transition\",\n        children: \"Upload Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 mt-2\",\n        children: \"Payment, review request, and advanced features coming soon.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SongUpload, \"mzJeKqikRWWYzIr2NhAI7N9Bujo=\");\n_c = SongUpload;\nexport default SongUpload;\nvar _c;\n$RefreshReg$(_c, \"SongUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialState","songName","songwriterName","yearWritten","performerName","video","SongUpload","_s","form","setForm","errors","setErrors","videoError","setVideoError","handleChange","e","name","value","files","target","file","size","prev","validate","errs","handleSubmit","preventDefault","Object","keys","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","accept","_c","$RefreshReg$"],"sources":["/Users/frees/repotresundios/starbuilder-mock/src/pages/SongUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst initialState = {\n  songName: \"\",\n  songwriterName: \"\",\n  yearWritten: \"\",\n  performerName: \"\",\n  video: null,\n};\n\nconst SongUpload = () => {\n  const [form, setForm] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [videoError, setVideoError] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    if (name === \"video\") {\n      const file = files[0];\n      if (file) {\n        // Placeholder: In a real app, check video duration after upload\n        if (file.size > 200 * 1024 * 1024) {\n          setVideoError(\"Video file too large (max 200MB)\");\n        } else {\n          setVideoError(\"\");\n        }\n        setForm((prev) => ({ ...prev, video: file }));\n      }\n    } else {\n      setForm((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const validate = () => {\n    const errs = {};\n    if (!form.songName) errs.songName = \"Song name is required\";\n    if (!form.songwriterName) errs.songwriterName = \"Songwriter name is required\";\n    if (!form.yearWritten) errs.yearWritten = \"Year written is required\";\n    // Performer name is optional unless not songwriter\n    // Video is optional for now\n    return errs;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const errs = validate();\n    setErrors(errs);\n    if (Object.keys(errs).length === 0 && !videoError) {\n      // Placeholder for upload logic (API call, payment, etc.)\n      alert(\"Song uploaded! (Demo only)\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-[60vh] px-4 py-10\">\n      <h1 className=\"text-white text-3xl font-bold mb-6\">Upload a Song</h1>\n      <form onSubmit={handleSubmit} className=\"bg-[#222b36] rounded-lg p-8 w-full max-w-xl space-y-4\">\n        <div>\n          <label className=\"block text-white\">Song Name</label>\n          <input name=\"songName\" value={form.songName} onChange={handleChange} className=\"form-input w-full\" />\n          {errors.songName && <span className=\"text-red-400 text-xs\">{errors.songName}</span>}\n        </div>\n        <div>\n          <label className=\"block text-white\">Songwriter Name</label>\n          <input name=\"songwriterName\" value={form.songwriterName} onChange={handleChange} className=\"form-input w-full\" />\n          {errors.songwriterName && <span className=\"text-red-400 text-xs\">{errors.songwriterName}</span>}\n        </div>\n        <div>\n          <label className=\"block text-white\">Year Written</label>\n          <input name=\"yearWritten\" value={form.yearWritten} onChange={handleChange} className=\"form-input w-full\" type=\"number\" />\n          {errors.yearWritten && <span className=\"text-red-400 text-xs\">{errors.yearWritten}</span>}\n        </div>\n        <div>\n          <label className=\"block text-white\">Performer Name (if not songwriter)</label>\n          <input name=\"performerName\" value={form.performerName} onChange={handleChange} className=\"form-input w-full\" />\n        </div>\n        <div>\n          <label className=\"block text-white\">Upload Video (max 6 min, ideally 2.5-4 min)</label>\n          <input name=\"video\" type=\"file\" accept=\"video/*\" onChange={handleChange} className=\"form-input w-full\" />\n          {videoError && <span className=\"text-red-400 text-xs\">{videoError}</span>}\n          <span className=\"text-xs text-gray-400\">(Video duration check coming soon)</span>\n        </div>\n        <button type=\"submit\" className=\"mt-6 w-full py-2 bg-[#0b80ee] text-white font-bold rounded-full hover:bg-[#0966b0] transition\">Upload Song</button>\n        <div className=\"text-xs text-gray-400 mt-2\">Payment, review request, and advanced features coming soon.</div>\n      </form>\n    </div>\n  );\n};\n\nexport default SongUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}